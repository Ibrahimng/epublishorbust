<?php

/**
 * @file
 * Sets default values for Available Time content based on Coordinator's Library.
 *
 */

/**
 * @param $form
 * @param $form_state
 *
 * Implements hook_form_alter().
 *
 */
function epob_form_available_time_node_form_alter(&$form, &$form_state) {

  // Set Library variables from Current User's Library node.
  if(!empty($results = epob_library_get_id())) {
    $term_id = $results[0]['tid'];
    $library_node_id = $results[0]['nid'];
    $library_name = $results[0]['title'];
  }

  //Set Available Time variables from Library node.
  if(!empty($results = epob_library_get_text($library_node_id))) {
    $at_description = $results[0]['field_library_default_body_value'];
    $at_description_summary = $results[0]['field_library_default_body_summary'];
    $at_description_format = $results[0]['field_library_default_body_format'];
    $at_confirm = $results[0]['field_library_default_confirm_value'];
    $at_confirm_format = $results[0]['field_library_default_confirm_format'];
  }

  //Set Available Time node form defaults.
  $form['field_user_library']['und']['#default_value'] = $term_id;
  $form['body']['und'][0]['#default_value'] = $at_description;
  $form['body']['und'][0]['summary']['#default_value'] = $at_description_summary;
  $form['body']['und'][0]['#format'] = $at_description_format;
  $form['field_library_confirmation_txt']['und'][0]['value']['#default_value'] = $at_confirm;
  $form['field_library_confirmation_txt']['und'][0]['#format'] = $at_confirm_format;
}

/**
 * @return mixed
 *
 * Get User's Library node data.
 */
function epob_library_get_id() {
  global $user;
  $query = db_select('field_data_field_user_library', 'f');
  $query->join('taxonomy_index', 't', 'f.field_user_library_tid = t.tid');
  $query->innerjoin('node', 'n', 't.nid = n.nid');
  $query->addField('t', 'tid');
  $query->addField('n', 'nid');
  $query->addField('n', 'title');
  $query->condition('f.entity_id', $user->uid);
  $query->condition('f.bundle', 'user');
  $query->condition('n.type', 'library');
  $query->orderBy('f.revision_id', 'DESC');
  $results = $query->execute()->fetchAll(PDO::FETCH_ASSOC);
  return $results;
}

/**
 * @param $nid
 * @return mixed
 *
 * Get Library nodes custom field data.
 */
function epob_library_get_text($nid) {
  $query = db_select('field_data_field_library_default_body', 'b');
  $query->innerjoin('field_data_field_library_default_confirm', 'c', 'b.entity_id=c.entity_id AND b.bundle=c.bundle');
  $query->addField('b', 'field_library_default_body_value');
  $query->addField('b', 'field_library_default_body_summary');
  $query->addField('b', 'field_library_default_body_format');
  $query->addField('c', 'field_library_default_confirm_value');
  $query->addField('c', 'field_library_default_confirm_format');
  $query->condition('b.bundle', 'library');
  $query->condition('b.entity_id', $nid);
  $query->orderBy('b.revision_id', 'DESC');
  $results = $query->execute()->fetchAll(PDO::FETCH_ASSOC);
  return $results;
}

/**
 * @param $results
 * @return string
 *
 * Displays db query results in a table for testing purposes.
 */
function epob_display_query_results($results) {
  $output ='';
  $header = array();
  $rows = array();
  foreach ($results as $result) {
    $rows[] = $result;
    foreach($result as $key => $value) {
      $header[] = $key;
    }
  }
  $output .= theme('table', array('header' => $header, 'rows' => $rows ));
  print $output;
}

/**
 * @param $node
 *
 * Implements hook_node_insert().
 *
 */
function epob_node_insert($node){
  global $user;
  drupal_set_message("form is submitted, thanks");
  $subject = 'Request confirmation.';
  $message = 'You have requested to ' . $node->title . ' on ' .  $node->field__available_time_date['und'][0]['value'] . '.';
  $message .= '\n\n' . $node->field_library_confirmation_txt['und'][0]['value'];
  $body = array(
    $message,
  );
  $params = array(
    'subject' => $subject,
    'body' => $body,
  );
  $key = 'confirmation';
  $to = $user->mail . ', blashbrook@gmail.com'; //$form_state['values']['email'];
  $from = 'blashbrook@gamil.com'; //$form_state['values']['from_email'];
  $mail = drupal_mail('epob', $key, $to, language_default(), $params, $from);
  // for better understanding,you can uncomment the following
  dpm($mail);
  dpm($node);
  drupal_set_message();
}

/**
 * @param $key
 * @param $message
 * @param $params
 *
 * Implements hook_mail().
 *
 */
function epob_mail($key, &$message, $params) {
  switch ($key) {
    case 'confirmation':
      $message['subject'] = $params['subject'];
      $message['body'] = $params['body'];
      break;
  }
}
